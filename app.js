// Generated by CoffeeScript 1.9.3
(function() {
  var YAML, checks, exec, fs, get, parse, path, pull, run, script, spawn, start;

  parse = require('./libs/yaml.js');

  fs = require('fs');

  path = require('path');

  get = require('./libs/get.js');

  checks = require('./libs/checks.js');

  parse = require('./libs/parse.js');

  spawn = require('child_process').spawn;

  exec = require('child_process').exec;

  script = require('./libs/gen.js').script;

  run = require('./libs/run.js').run;

  pull = require('./libs/pull.js');

  YAML = require('yamljs');

  'use strict';

  start = function(args, dir) {
    var im;
    checks.instances(dir, true);
    this.parsed = parse.parse(dir + '/' + args + '/.web.yml');
    if (parsed.nodejs !== void 0 && process.env.WEB_DOCKER === false) {
      console.log('WARN: Nodejs version ' + parsed.nodejs + ' is required. \nPlease consider using Docker');
    }
    if (parsed.ruby !== void 0 && process.env.WEB_DOCKER === false) {
      console.log('WARN: Ruby version ' + parsed.ruby + ' is required. \nPlease consider using Docker');
    }
    if (parsed.python !== void 0 && process.env.WEB_DOCKER === false) {
      console.log('WARN: Python version ' + parsed.python + ' is required. \nPlease consider using Docker');
      if (parsed.python === '3') {
        console.log('WARN: You are using Python 3. All python cmd commands must be ran using "python3"');
      }
    }
    if (parsed.nodejs === 'latest') {
      console.log('WARN: latest is not a nodejs version. For the latest version, use "stable" instead. We wil swap "latest" for "stable" this time');
    }
    if (process.env.WEB_DOCKER !== false) {
      console.log('\nPulling Docker images...');
      this.images = parse.parse('config/images.yml');
      this.dateo = new Date().getDate();
      if (images.date !== this.dateo) {
        im = 0;
        while (im < images.images.length) {
          exec('docker pull ' + images.images[im]);
          im++;
        }
        images.date = this.dateo;
        this.write = YAML.stringify(this.images, 4);
        fs.writeFileSync('config/images.yml', this.write);
      } else {
        console.log('Already pulled images');
      }
    }
    console.log('\nStarting Web-app ' + parsed.name);
    console.log('Language: ' + parsed.language);
    if (process.env.WEB_DOCKER !== false) {
      script(parsed.language, parsed, null, dir + '/' + args);
    }
    return 'Done';
  };

  exports.pullImages = function(dir) {
    return pull.pullImages(dir);
  };

  exports.run = function(image, args) {
    return runImage(image, args);
  };

  start('web', 'instances');

}).call(this);
